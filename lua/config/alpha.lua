local M = {}

function M.setup()
    local status_ok, alpha = pcall(require, "alpha")
    if not status_ok then
        return
    end

    local dashboard = require "alpha.themes.dashboard"
    local function Beholder()
        --  return {
        --    [[                                           bbbbbbbb            ]],
        --    [[                                           b::::::b            ]],
        --    [[                                           b::::::b            ]],
        --    [[                                           b::::::b            ]],
        --    [[                                            b:::::b            ]],
        --    [[nnnn  nnnnnnnn    vvvvvvv           vvvvvvv b:::::bbbbbbbbb    ]],
        --    [[n:::nn::::::::nn   v:::::v         v:::::v  b::::::::::::::bb  ]],
        --    [[n::::::::::::::nn   v:::::v       v:::::v   b::::::::::::::::b ]],
        --    [[nn:::::::::::::::n   v:::::v     v:::::v    b:::::bbbbb:::::::b]],
        --    [[  n:::::nnnn:::::n    v:::::v   v:::::v     b:::::b    b::::::b]],
        --    [[  n::::n    n::::n     v:::::v v:::::v      b:::::b     b:::::b]],
        --    [[  n::::n    n::::n      v:::::v:::::v       b:::::b     b:::::b]],
        --    [[  n::::n    n::::n       v:::::::::v        b:::::b     b:::::b]],
        --    [[  n::::n    n::::n        v:::::::v         b:::::bbbbbb::::::b]],
        --    [[  n::::n    n::::n         v:::::v          b::::::::::::::::b ]],
        --    [[  n::::n    n::::n          v:::v           b:::::::::::::::b  ]],
        --    [[  nnnnnn    nnnnnn           vvv            bbbbbbbbbbbbbbbb   ]],
        --  }
        return {
            [[      ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣷⠢⡀⠀⠀⢸⣿⣄⣀⣀⣤⣶⣾⣿⠲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡆⠑⡄⠀⠘⠿⠿⠿⠿⢿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⡤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠒⠛⠓⢶⡤⡀⠀⠀⠀⠀⣠⣾⣿⡇⣠⠇⠀⢀⣀⣀⠤⣀⠀⣽⣿⣿⣿⣶⣶⣿⠇⠒⠒⠤⠙⣎⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⡆⠀⠀⠀⢱⠹⠐⡄⠀⣼⣿⣿⣿⠉⠁⣀⣰⠋⠁⠀⢠⠀⠁⢿⣿⣿⣿⣿⡟⠁⠀⠀⡆⠀⠆⠹⣦⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡄⠸⠀⠳⠀⠀⢀⣾⣶⣧⢸⠀⣿⣿⣿⣿⣄⢸⣿⣿⠀⠀⠀⠘⡄⠀⣸⣿⣿⣿⣿⣧⠀⠀⠀⡜⠀⠆⠀⢻⠃⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⣾⣿⠁⠀⠳⣶⣶⣾⣿⣿⣿⣿⡞⣤⣼⣿⣿⣿⣿⣮⠻⣿⣿⣦⣀⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⠖⢫⣶⣶⣾⣿⣞⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣷⣿⣿⣿⡆⢈⡁⣿⣿⣿⣿⣇⣻⣿⣿⣿⣿⣿⣿⢧⣸⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣙⠿⣿⣷⣄⣄⣸⣿⣿⣿⣿⣿⠇⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⡇⣸⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⢿⣿⣿⣿⡟⢢⣸⣿⣿⣿⣿⣿⣿⡏⢉⠁⢀⣰⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⣀⣙⠉⠉⠉⢹⣿⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡜⢿⣟⠛⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⠤⠀⠠⡀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⡠⠊⠀⠀⠈⠰⡒⢾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣌⣿⣿⣿⣟⢻⣿⣿⣿⣇⢸⠟⠛⣿⣿⣿⣆⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⢠⠀⠐⡀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⢸⠀⠀⠑⢤⡀⠀⢸⣆⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣇⢀⣠⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⡇⢀⠇⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠘⣆⠀⠀⠀⠀⢀⣾⣿⣿⣌⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣀⣀⡠⠊⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠑⠶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠛⣟⣿⣿⣿⣿⣿⣿⡄⠙⣽⣿⣿⣿⣷⣿⣿⣿⣷⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣯⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⣴⠀⣀⣠⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣷⣿⣄⣽⣿⠋⠀⢀⠉⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠆⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠸⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣶⣿⣿⣶⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⡟⠛⣻⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠻⠿⠛⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⠋⠀⠘⣿⣿⣿⣿⣿⡿⣿⣧⣾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⢂⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⢀⠉⠉⠉⠉⠉⠉⠉⢹⣿⠀⠀⠀⠀⠀⠈⡀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⡖⠲⡄⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⡆⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠈⣿⠀⠀⠀⠀⠀⢀⠃⠀⣸⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡿⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀⠜⢀⣴⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⣘⣆⣀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣴⣾⣿⣿⠿⠛⠁⢀⣿⣿⣿⡿⢿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⡙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿⣿⣷⣿⠿⠛⠉⠀⢀⡀⡠⣻⣿⣿⣿⠇⣾⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⠢⡀⠀⠉⠉⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠋⠉⠀⠀⣀⣠⠔⠃⢈⣴⣿⣿⡿⠋⣸⣿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⠀⠸⣿⡟⢿⣿⣿⣿⣿⣧⡐⠦⠤⠋⠓⢤⡀⢀⠠⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⢀⣴⣿⣿⣿⠟⠁⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⢹⣿⣿⣿⣿⣷⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣾⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣦⣤⣤⣤⣤⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⡙⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⢀⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣧⣤⡀⠘⣿⣿⣿⣿⡛⠛⠛⠋⠉⠥⣼⡿⠿⠛⣠⣴⣿⡿⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠉⠛⠛⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
        }
    end

    local function header_Rummstein()
        return {
[[              &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&             ]],
[[             &&##BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB##&&            ]],
[[             &&#BG!~~~^~~~^~~~~^YGY^~~~~~~^~~~~~!GB#&&            ]],
[[             &&#BG^::^!!!!~~!!!!YBY!!!!!!!!!!~::^GB#&&            ]],
[[             &&#BG^::?BBBBBBBBBBB#####B#BB##B5::^GB#&&            ]],
[[            &&&#BG^::?B##&&&&&&&&&&&&&&&&&&#B5::^GB#&&&&&         ]],
[[  &&&#########&#BG!^^JB########&&&&&&&&&&&&#B5::^PB############&& ]],
[[ &&#BBGGGGGPGGGGGPP55PPPPPPPPGGGGGGGGB##&&&#B5::^PGPGGGGGGGPPGB#&&]],
[[ &&#BP^:::::::::::::::::::::::::::::~GB#&&&#B5:::::::::::::::YB##&]],
[[ &&#BP:::7???????????????????????^::~GB#&&&#BP???????????7^::JB##&]],
[[ &&#BP::^GBBB##################BB!::~GB#&&&#############BG~::JB#&&]],
[[ &&#BP::~GB#&&&&&&&&&&&&&&&&&&#BB7::~GB#&& &&&&&&&&&&&&#BG^::JB##&]],
[[ &&#BP::^GB#&& &&&&&&&&&&   &&#BG!::~GB#&&           &&#BG^::JB##&]],
[[ &&#BP::^GB#&&&&########&&& &&#BG!::~GB#&&           &&#BG^::JB##&]],
[[ &&#BG7!7GB#&&&#BGJ???PB##&&&&#BG~::~GB#&&           &&#BG7!!5B##&]],
[[ &&#BBPPPBB#&&&#BG^:::^5B##&&&#BG~::~GB#&&           &&##BPPPGB#&&]],
[[ &&#BP^:~GB#&&&#BG^:::::YB##&&#BB~::!BB#&&           &&#BG~::JB##&]],
[[ &&#BP::^GB#&&&#BG^::^:::YB##&##B7::~GB#&&&          &&#BG~::JB##&]],
[[ &&#BP::^GB#&&&#BG^::J7:::JBB#&#BG!::~PB##&&         &&#BG~::JB##&]],
[[ &&#BP::^GB##&##BP^::YG?:::JBB###BB7::^5B#&&&&&&&&&&&&##BG~::JBB#&]],
[[ &&#BP::^PGGGGGPP5^::YBB?:::?PGGGGGP7::^5B###BBBBBBBBBBBGG~::JB##&]],
[[ &&#BP:::::::::::::::YB#BJ:::::::::::::::5BBB5^^^^^^^^^^^^:::JB##&]],
[[ &&#BGJ???????????JJ?PB##B5??????????????JGBB5:::7777777777?75B##&]],
[[ &&#############BB5JJPB###################BBB5:::PB#############&&]],
[[   &&&&&&&&&&&&##B^::JB#&&&&&&&&&&&&&&&&&&&#B5::^PB#&&&&&&&&&&&&  ]],
[[             &&#BG^::JB#####################B5:::PB#&&            ]],
[[             &&#BG^::?5P55555555GBGPPPPPP5PPPJ:::PB#&&            ]],
[[             &&#BG^:::::::::::::YBJ::::::::::::::PB#&&            ]],
[[             &&#BBYJJJJJYYJJJJJYPBPJYJJYYJYJJJJYYGB#&&            ]],
[[              &&###################################&&&            ]],
[[                &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&               ]],
        }
    end

    local function Rammstein()
       return {
[[                                                              ]],
[[                                                              ]],
[[                 ⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⡆ ⢰⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶⣶                ]],
[[                 ⣿⣿⣿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠇ ⠸⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⣿⣿⣿                ]],
[[                 ⣿⣿⣿                       ⣿⣿⣿                ]],
[[                 ⣿⣿⣿                       ⣿⣿⣿                ]],
[[                 ⣿⣿⣿                       ⣿⣿⣿                ]],
[[                                           ⣿⣿⣿                ]],
[[     ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇        ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇    ]],
[[     ⢸⣿⣿⡟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢿⣿⣿⡇        ⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢻⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇                      ⢸⣿⣿⡇                   ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇                      ⢸⣿⣿⡇                   ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇                      ⢸⣿⣿⡇                   ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇                      ⣸⣿⣿⡇                   ⢸⣿⣿⡇    ]],
[[     ⠸⠿⠿⠇        ⣤⣤⣤⣤          ⣿⣿⣿⡇                   ⠘⠿⠿⠇    ]],
[[     ⢀⣀⣀⡀        ⣿⣿⣿⣿⣦         ⣿⣿⣿⡇                    ⣀⣀⡀    ]],
[[     ⢸⣿⣿⡇        ⣿⣿⣿⣿⣿⣧        ⣿⣿⣿⡇                   ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇        ⣿⣿⣿⢿⣿⣿⣧       ⢹⣿⣿⣇                   ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇        ⣿⣿⣿⠈⣿⣿⣿⣧      ⠈⢿⣿⣿⣧                  ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇        ⣿⣿⣿ ⠈⢿⣿⣿⣧       ⢻⣿⣿⣧                 ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⡇        ⣿⣿⣿  ⠈⢿⣿⣿⣧⡀      ⢻⣿⣿⣦                ⢸⣿⣿⡇    ]],
[[     ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿   ⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇    ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇    ]],
[[     ⠘⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛     ⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠂   ⣿⣿⣿⡟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠃    ]],
[[                 ⣤⣤⣤                       ⣿⣿⣿                ]],
[[                 ⣿⣿⣿                       ⣿⣿⣿                ]],
[[                 ⣿⣿⣿                       ⣿⣿⣿                ]],
[[                 ⣿⣿⣿⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⡀ ⢀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣿⣿⣿                ]],
[[                 ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇ ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿                ]],
[[                 ⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠃ ⠘⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛                ]],
[[                                                              ]],
[[                                                              ]],

        } 
    end

    -- Choose header
    local random_board = os.time() % 2

    if random_board == 0 then
        dashboard.section.header.val = Rammstein()
    else
        dashboard.section.header.val = Beholder()
    end


    dashboard.section.buttons.val = {
        dashboard.button("e", "🎇 New file", ":ene <BAR> startinsert <CR>"),
        dashboard.button("c", "🌀 Configuration", ":e $MYVIMRC <CR>"),
        dashboard.button("f", "🎓 Find file", ":<leader>ff<CR>"),
        -- dashboard.button("SPC f h", "  Recently opened files"),
        -- dashboard.button("SPC f r", "  Frecency/MRU"),
        -- dashboard.button("SPC f g", "  Find word"),
        -- dashboard.button("SPC f m", "  Jump to bookmarks"),
        -- dashboard.button("SPC s l", "  Open last session"),
        dashboard.button("q", "🌒 Quit Neovim", ":qa<CR>"),
    }

    local function footer()
        -- Number of plugins
        local total_plugins = #vim.tbl_keys(packer_plugins)
        local datetime = os.date [[%d-%m-%Y  %H:%M:%S]]
        local plugins_text = "\t" .. total_plugins .. " plugins ➕ " .. datetime

        -- Quote
        local fortune = require "alpha.fortune"
        local quote = table.concat(fortune(), "\n")

        return plugins_text .. "\n" .. quote
    end

    dashboard.section.footer.val = footer()

    dashboard.section.footer.opts.hl = "Constant"
    dashboard.section.header.opts.hl = "Include"
    dashboard.section.buttons.opts.hl = "Function"
    dashboard.section.buttons.opts.hl_shortcut = "Type"
    dashboard.opts.opts.noautocmd = true

    alpha.setup(dashboard.opts)
end

return M
